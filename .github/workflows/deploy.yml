name: Deploy to VPS

on:
  push:
    branches: [ prod ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests and linting
      run: |
        npm run type-check
        npm run lint
        
    - name: Build production
      run: npm run build
      env:
        VITE_GITHUB_USERNAME: ${{ secrets.VITE_GITHUB_USERNAME }}
        VITE_GITHUB_TOKEN: ${{ secrets.VITE_GITHUB_TOKEN }}
        VITE_GITHUB_EXCLUDE_REPOS: ${{ secrets.VITE_GITHUB_EXCLUDE_REPOS }}
        VITE_LINKEDIN_PROFILE_PIC_URL: ${{ secrets.VITE_LINKEDIN_PROFILE_PIC_URL }}
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Stop any running processes
          pm2 stop portfolio || true
          pm2 delete portfolio || true
          
          # Navigate to app directory
          cd /var/www/portfolio
          
          # Backup current version
          if [ -d "live" ]; then
            mkdir -p backups
            cp -r live backups/backup-$(date +%Y%m%d-%H%M%S)
          fi
          
          # Create new deployment directory
          mkdir -p temp
          
    - name: Upload files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "dist/*"
        target: "/var/www/portfolio/temp"
        strip_components: 1
        
    - name: Finalize deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /var/www/portfolio
          
          # Replace current deployment
          rm -rf live
          mv temp live
          
          # Set proper permissions
          sudo chown -R stavlobel:stavlobel /var/www/portfolio
          chmod -R 755 live
          
          # Restart Nginx
          sudo systemctl reload nginx
          
          # Start PM2 process (if using Node.js server)
          # pm2 start /var/www/portfolio/live/server.js --name portfolio
          
          # Clean up old backups (keep last 3)
          ls -t backups/backup-* 2>/dev/null | tail -n +4 | xargs rm -rf || true
          
          echo "Deployment completed successfully!" 